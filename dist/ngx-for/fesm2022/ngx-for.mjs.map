{"version":3,"file":"ngx-for.mjs","sources":["../../../projects/ngx-for/src/lib/ngx-for.directive.ts","../../../projects/ngx-for/src/public-api.ts","../../../projects/ngx-for/src/ngx-for.ts"],"sourcesContent":["import { Directive, Input, IterableDiffer, IterableDiffers, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\ntype TIterable<T> = Iterable<T> | null | undefined;\r\ninterface IListData<T> {\r\n  $implicit: T;\r\n  index: number;\r\n}\r\ninterface ICountData<T> {\r\n  remaining: number;\r\n  items: Iterable<T>;\r\n}\r\n\r\n@Directive({\r\n  selector: '[ngxFor][ngxForOf]',\r\n  standalone: true\r\n})\r\nclass NgxForOf<T> {\r\n\r\n  private difference: IterableDiffer<T> | null = null;\r\n  private iterableItems: TIterable<T>;\r\n  private showMoreTemplate?: TemplateRef<ICountData<T>>;\r\n  private showCount = 2;\r\n\r\n  @Input() ngxForOf: TIterable<T>;\r\n  @Input() ngxForShowMoreTemplate?: TemplateRef<IListData<T>>;\r\n  @Input() ngxForShowCount: number = 2;\r\n\r\n  constructor(\r\n    private iterableDiffers: IterableDiffers,\r\n    private viewContainer: ViewContainerRef,\r\n    private templateRef: TemplateRef<IListData<T>>\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes?.ngxForOf?.currentValue) {\r\n      this.iterableItems = changes.ngxForOf.currentValue;\r\n      this.checkStateChange(this.iterableItems);\r\n    }\r\n    if (changes?.ngxForShowMoreTemplate?.currentValue) {\r\n      this.showMoreTemplate = changes.ngxForShowMoreTemplate.currentValue;\r\n      this.iterableItems && this.updateView(this.iterableItems);\r\n    }\r\n    if (changes?.ngxForShowCount?.currentValue) {\r\n      this.showCount = changes.ngxForShowCount.currentValue;\r\n      this.iterableItems && this.updateView(this.iterableItems);\r\n    }\r\n  }\r\n\r\n  checkStateChange(iterableItems: TIterable<T>) {\r\n    if (!this.difference && iterableItems) {\r\n      this.difference = this.iterableDiffers.find(iterableItems).create();\r\n    }\r\n\r\n    if (this.difference) {\r\n      const changes = this.difference.diff(iterableItems);\r\n      if (changes) {\r\n        iterableItems && this.updateView(iterableItems);\r\n      }\r\n    } else {\r\n      this.updateView([]);\r\n    }\r\n  }\r\n\r\n  updateView(iterableItems: Iterable<T>) {\r\n    this.viewContainer.clear();\r\n    const items = iterableItems ? [...iterableItems] : [];\r\n    if (items.length <= this.showCount) {\r\n      items.map((item, index) => {\r\n        this.viewContainer.createEmbeddedView(this.templateRef, {\r\n          $implicit: item,\r\n          index,\r\n        });\r\n      });\r\n    } else {\r\n      const remaining = items.length - this.showCount;\r\n      for (let i = 0; i < this.showCount; i++) {\r\n        this.viewContainer.createEmbeddedView(this.templateRef, {\r\n          $implicit: items[i],\r\n          index: i,\r\n        });\r\n      }\r\n      if (this.showMoreTemplate) {\r\n        this.viewContainer.createEmbeddedView(this.showMoreTemplate, {\r\n          remaining,\r\n          items: iterableItems,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { NgxForOf as NgxFor }\r\nexport { NgxForOf }\r\n\r\n","/*\r\n * Public API Surface of ngx-for\r\n */\r\n\r\nexport * from './lib/ngx-for.directive';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}